apply plugin: 'idea'
apply plugin: 'java'

buildscript {
    repositories {
        mavenLocal()
        maven { url "http://maven.oschina.net/content/groups/public/" }
        mavenCentral()
    }
}

allprojects {
    group = "com.junesix"
    version = "0.1.RELEASE"
}

subprojects {
    apply plugin: 'idea'
    apply plugin: 'java'

    sourceCompatibility = 1.8
    targetCompatibility = 1.8

    repositories {
        mavenLocal()
        maven { url "http://maven.oschina.net/content/groups/public/" }
        maven { url "http://repo.spring.io/milestone" }
        maven { url 'http://repo.spring.io/libs-release' }
        mavenCentral()
    }

    //idea插件会默认下载source和doc文件
    idea {
        module {
            downloadJavadoc = false
            downloadSources = false
        }
    }

    dependencies {
        compile "com.google.guava:guava:$guavaVersion"
        compile "org.apache.commons:commons-lang3:$commonsLangVersion"
        compile "commons-io:commons-io:$commonsIOVersion"
        testCompile "junit:junit:4.11"
    }

}

//执行gradle wrapper自动生成gradlew脚本及配置
task wrapper(type: Wrapper) {
    gradleVersion = '2.4'
}
